'''
Добавьте в модуль с загадками функцию, которая хранит словарь списков.
Ключ словаря - загадка, значение - список с отгадками.
Функция в цикле вызывает загадывающую функцию, чтобы передать ей все свои загадки.
'''

__all__ = ['multy_game', 'print_result']

from games_riddle import game_guess_riddle

_dict_log = dict()


def multy_game():
    dict_all = {'Зимой и летом одним цветом': ['ель', 'ёлка', 'сосна'],
                'Не лает, не кусает, в дом не пускает': ['замок'],
                'Сидит дед во сто шуб одет': ['лук', 'луковица']}

    for question, answers in dict_all.items():
        res = game_guess_riddle(question, answers)
        add_dict_log(question, res)


'''
Добавьте в модуль с загадками функцию, которая принимает на вход строку (текст загадки) 
и число (номер попытки, с которой она угадана). 
Функция формирует словарь с информацией о результатах отгадывания. 
Для хранения используйте защищённый словарь уровня модуля.
Отдельно напишите функцию, которая выводит результаты угадывания из защищённого словаря в удобном для чтения виде. 
Для формирования результатов используйте генераторное выражение.
'''


def add_dict_log(question: str, answer: int):
    _dict_log[question] = answer


def print_result():
    result = (f'загадка: {key} - результат - {"не угадали" if value == 0 else f"угадали и {value} попытки"}' for
              key, value in _dict_log.items())

    print('\n'.join(result))


if __name__ == '__main__':
    multy_game()
    print_result()
