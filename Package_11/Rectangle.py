"""
–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫.
üìå –ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
üìå –£ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –ø–ª–æ—â–∞–¥—å.
üìå –ï—Å–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Å—Ç–æ—Ä–æ–Ω–∞, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —É –Ω–∞—Å –∫–≤–∞–¥—Ä–∞—Ç.
"""
'''
üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
'''
'''
1.–î–æ–±–∞–≤—å—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏: –î–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ —à–µ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
2.–î–æ–±–∞–≤—å—Ç–µ –∫–æ –≤—Å–µ–º –∑–∞–¥–∞—á–∞–º —Å —Å–µ–º–∏–Ω–∞—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –ø–µ—á–∞—Ç—å.
'''


class Rectangle:

    def __init__(self, height: int, width=None):
        self.height = height
        if width:
            self.width = width
        else:
            self.width = height

    def get_perimetr(self):
        return 2 * (self.height + self.width)

    def get_area(self):
        return self.width * self.height

    def __str__(self):
        return f'–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ ({self.width}—Ö{self.height}), S= {self.get_area()}'

    def __repr__(self):
        return f'—Ä–∞–∑–º–µ—Ä—ã:({self.width}—Ö{self.height}), S= {self.get_area()}'

    def __add__(self, other):

        perimetr = self.get_perimetr() + other.get_perimetr()
        side_a = perimetr // 6
        side_b = (perimetr - side_a * 2) // 2

        return Rectangle(side_a, side_b)

    def __sub__(self, other):

        perimetr = abs(self.get_perimetr() - other.get_perimetr())
        side_a = perimetr // 6
        side_b = (perimetr - side_a * 2) // 2

        return Rectangle(side_a, side_b)

    def __eq__(self, other):
        """—Ä–∞–≤–Ω–æ"""
        return self.get_area() == other.get_area()

    def __ne__(self, other):
        """–Ω–µ —Ä–∞–≤–Ω–æ"""
        return self.get_area() != other.get_area()

    def __gt__(self, other):
        """–±–æ–ª—å—à–µ"""
        return self.get_area() > other.get_area()

    def __ge__(self, other):
        """–±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ"""
        return self.get_area() >= other.get_area()

    def __lt__(self, other):
        """–º–µ–Ω—å—à–µ"""
        return self.get_area() < other.get_area()

    def __le__(self, other):
        """–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ"""
        return self.get_area() <= other.get_area()


spam = Rectangle(10)
eggs = Rectangle(4, 3)
kuk = Rectangle(2, 6)

add_reg = spam + eggs
sub_reg = spam - eggs

# print(f'{sub_reg.width = }, {sub_reg.height =}')
# print(f'{add_reg.width = }, {add_reg.height =}')
# print(f'{spam.get_area() =}')
# print(f'{spam.get_perimetr()= }')
# print(f'{eggs.get_area()= }')
# print(f'{eggs.get_perimetr()= }')


print('\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ (—Ä–∞–≤–Ω–æ)')
print(f'{eggs}, {kuk}, —Ä–∞–≤–Ω—ã: {eggs == kuk}')
print(f'{spam}, {kuk}, —Ä–∞–≤–Ω—ã: {spam == kuk}')

print('\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ (–ù–ï —Ä–∞–≤–Ω–æ)')
print(f'{eggs}, {kuk}, –ù–ï —Ä–∞–≤–Ω—ã: {eggs != kuk}')
print(f'{spam}, {kuk} –ù–ï —Ä–∞–≤–Ω—ã: {spam != kuk}')

print('\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ (–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)')
print(f'{eggs}, {kuk}, –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ: {eggs <= kuk}')
print(f'{spam}, {kuk}, –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ: {spam <= kuk}')
print(f'{kuk}, {spam}, –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ: {kuk <= spam}')

print('\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ (–±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)')
print(f'{eggs}, {kuk}, –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ: {eggs >= kuk}')
print(f'{spam}, {kuk}, –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ: {spam >= kuk}')
print(f'{kuk}, {spam}, –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ: {kuk >= spam}')

print('\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ (–º–µ–Ω—å—à–µ)')
print(f'{eggs}, {kuk}, –º–µ–Ω—å—à–µ: {eggs < kuk}')
print(f'{spam}, {kuk}, –º–µ–Ω—å—à–µ: {spam < kuk}')
print(f'{kuk}, {spam}, –º–µ–Ω—å—à–µ: {kuk < spam}')

print('\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ (–±–æ–ª—å—à–µ)')
print(f'{eggs= }, {kuk= }, –±–æ–ª—å—à–µ: {eggs > kuk}')
print(f'{spam= }, {kuk= }, –±–æ–ª—å—à–µ: {spam > kuk}')
print(f'{kuk= }, {spam= }, –±–æ–ª—å—à–µ: {kuk > spam}')
