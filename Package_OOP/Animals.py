"""
–∑–∞–¥–∞–Ω–∏–µ 5
–°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–∏ (–∏–ª–∏ –±–æ–ª–µ–µ) –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä —Ä—ã–±—ã, –ø—Ç–∏—Ü—ã –∏ —Ç.–ø.
üìå –£ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–∞–∫ –æ–±—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–º—è, —Ç–∞–∫ –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∞.
üìå –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.

–∑–∞–¥–∞–Ω–∏–µ 6
–í—ã–Ω–µ—Å–∏—Ç–µ –æ–±—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–æ–≤ –≤ –∫–ª–∞—Å—Å –ñ–∏–≤–æ—Ç–Ω–æ–µ.
–û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –Ω–∞—Å–ª–µ–¥—É–π—Ç–µ –æ—Ç –Ω–µ–≥–æ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –∫–ª–∞—Å—Å—ã –≤–Ω–µ—Å–µ–Ω—ã –ø—Ä–∞–≤–∫–∏

–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ–∞–±—Ä–∏–∫—É.
‚óã –ö–ª–∞—Å—Å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–∏–ø –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤)–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–ø–∞.
‚óã –í–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∏ –≤–µ—Ä–Ω–∏—Ç–µ –µ–≥–æ –∏–∑ –∫–ª–∞—Å—Å–∞-—Ñ–∞–±—Ä–∏–∫–∏.
"""


class Animals:
    def __init__(self, name):
        self.name = name

    def get_info(self):
        return f'{self.name}'


class Fish(Animals):
    def __init__(self, name, depth: int):
        super().__init__(name)
        self.depth = depth

    def get_info(self):
        return f'{self.name},  –≥–ª—É–±–∏–Ω–∞ –æ–±–∏—Ç–∞–Ω–∏—è (–º): {self.depth}'


class Dog(Animals):
    def __init__(self, name, breed: str):
        super().__init__(name)
        self.breed = breed

    def get_info(self):
        return f'{self.name}, –ø–æ—Ä–æ–¥–∞: {self.breed}'


class Snake(Animals):
    def __init__(self, name, toxicity: bool):
        super().__init__(name)
        self.toxicity = toxicity

    def get_info(self):
        return f'{self.name}, —è–¥–æ–≤–∏—Ç–æ—Å—Ç—å: {"Yes" if self.toxicity else "No"}'


class Cat(Animals):
    def __init__(self, name, long_haired: bool):
        super().__init__(name)
        self.long_haired = long_haired

    def get_info(self):
        return f'{self.name}, –¥–ª–∏–Ω–æ—à–µ—Ä—Å—Ç–Ω–æ—Å—Ç—å: {"Yes" if self.long_haired else "No"}'


class AnimalsFactory:
    def __init__(self):
        self.dict_type_str = {str(item.__name__): item for item in Animals.__subclasses__()}
        self.list_type_cls = Animals.__subclasses__()

    def create_animal(self, type_animal, *args):
        if type(type_animal) == str:

            if self.dict_type_str.get(type_animal) is None:
                raise ValueError('—Ç–∞–∫–æ–≥–æ –≤–∏–¥–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –Ω–µ—Ç')

            return self.dict_type_str[type_animal](*args)
        else:
            if type_animal in self.list_type_cls:
                return type_animal(*args)
            else:
                raise ValueError('–Ωe –≤—Ö–æ–¥–∏—Ç –≤ –∫–ª–∞—Å—Å –∂–∏–≤–æ—Ç–Ω—ã—Ö')


if __name__ == '__main__':
    fabric = AnimalsFactory()
    som = fabric.create_animal('Fish', 'Som', 15)
    tosha = fabric.create_animal(Dog, 'Tosha', 'beagle')
    zoya = fabric.create_animal(Snake, 'Zoya', True)
    bagel = fabric.create_animal('Cat', 'bagel', True)

    print(som.get_info())
    print(tosha.get_info())
    print(f'{zoya.get_info() = }')
    print(f'{bagel.get_info() = }')
